-proyecto angular-

crear proyecto
en cmd:	   
ng new directivas --skip-tests --prefix directivas (directivas es el nombre del prefijo)
yes
css
npm install (descarga librerias)

levantar proyecto
dentro de la ruta del proyecto:
npm start

crear componentes:
ng g c components/directivaif (directivaif es el nombre del componente)

crear servicios:
ng g s services/nombre_servicio

crear pipes:
ng g p pipes/pipePersonalizado


1. Crear el proyecto (en comand prompt)
2. instalar paquetes con npm install en la ruta del proyecto
3. en index.html, incluir los enlaces a bootstrap al final del head:
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD" crossorigin="anonymous">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-w76AqPfDkMBDXo30jS1Sgez6pr3x5MlQ1ZAGC+nuZB+EYdgRZgiwxhTBTkF7CXvN"
    crossorigin="anonymous"></script>
4. levantar el proyecto para ver si funciona
5. eliminar todo el contenido del app.component.html (en este archivo es donde se colocan los componentes que se van creando)
6. crear componente con ng g c components/nombre_componente
7. crear servicio con ng g s services/nombre_servicio
8. inicializar el servicio dentro del component.ts:
	constructor(private servicio: NoticiasService) {
    		this.noticias = servicio.noticias
  	}



COMANDOS:
-filter:
sacarNoticias(type: string) {
    this.noticiasFiltradas = [];
    this.noticiasFiltradas = this.noticias.filter((item) =>
      item.sectionId == type);

    console.log(this.noticiasFiltradas);
  }

RUTAS:
clase recibidora:
export class DetalleComponent {
  id!: string;

  noticia?: noticiaInterfaz;


  constructor(private gestorRutas: ActivatedRoute, private servicio: NoticiasService) {}

  ngOnInit(): void {
    this.gestorRutas.params.subscribe((parametros: Params) => {
      this.id = parametros['id'];
      this.noticia = this.servicio.getNoticiaById(this.id);
    });
  }
}

html componente recibidor:

<div class="container">
  <div class="row">
    <div class="col-8">
      <practica-noticias></practica-noticias>
    </div>
    <!-- Componente detalles -->
    <div class="col-4">
      <router-outlet></router-outlet>
      <practica-detalle></practica-detalle>
    </div>
  </div>
</div>

app-routing.module:

const routes: Routes = [
  { path: '', redirectTo: '/noticias', pathMatch: 'full'},
  {path: 'noticias', component: NoticiasComponent},
  {path: 'noticias/:id', component: DetalleComponent} // a√±adir la ruta con par. id
];

html del componente enviador:

<a [routerLink]="['/noticias', item.id]" class="btn btn-primary"
              >Ver Detalles</a
            >


servicio:

getNoticiaById(id: string): noticiaInterfaz | undefined {
      return this.noticias.find(noticia => noticia.id === id);
    }





---------------------------------------------
<button (click)="navegarOnClick('eenove')">Viajar</button>

<router-outlet></router-outlet>


navegarOnClick(nombre:string) {
  //Necesitamos un componente propio de angular llamado Router
  this.navegador.navigate(['ciclos',nombre.toLowerCase()]);
}

subscribe en el ts para escuchar el parametro